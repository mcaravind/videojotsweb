{"text":"[{\"pos\":691,\"text\":\"In this video series, I will teach you how to do functional programming in Javascript. \"},{\"pos\":13356,\"text\":\"I will begin by telling you about one of the most important concepts in functional programming, higher order functions. \"},{\"pos\":30133,\"text\":\"Before I do that, I will tell you why. \"},{\"pos\":56134,\"text\":\"I love functional programming and it has made programming so much more fun to me. \"},{\"pos\":88506,\"text\":\"You will be able to write your programs with less bugs in less time. \"},{\"pos\":95661,\"text\":\"/n/<span class=\\\"t\\\">Higher order functions</span>\"},{\"pos\":120911,\"text\":\"In JavaScript, functions are values. \"},{\"pos\":136664,\"text\":\"/n/We will see the basic function in its natural habitat. \"},{\"pos\":148740,\"text\":\"This is a simple function. \"},{\"pos\":167988,\"text\":\"Not all programs can do this: create an anonymous function and assign it to a variable. \"},{\"pos\":173599,\"text\":\"We can pass it around like any other value. \"},{\"pos\":198029,\"text\":\"/n/<span class=\\\"t\\\">What are higher order functions good for?</span>\"},{\"pos\":206874,\"text\":\"For composition. \"},{\"pos\":210874,\"text\":\"Since you can take a function and put it into another function, it allows us to compose a lot of small functions into bigger functions. \"},{\"pos\":222402,\"text\":\"Let us look at an example. \"},{\"pos\":223560,\"text\":\"/n/Probably the most basic and useful higher order function is the filter function. \"},{\"pos\":233950,\"text\":\"It is a function on the array that accepts another function as its argument, which you can use to return a new filtered version of the array. \"},{\"pos\":246172,\"text\":\"/n/We see a list of animals. \"},{\"pos\":256923,\"text\":\"We want to filter out the dogs. \"},{\"pos\":279106,\"text\":\"/n//i/Normal way of for loop to do this/\"},{\"pos\":310107,\"text\":\"/n/<span class=\\\"t\\\">Lets rewrite using filter function</span>\"},{\"pos\":345706,\"text\":\"Lets have a look at this. \"},{\"pos\":350209,\"text\":\"Filter accepts one argument, another function. \"},{\"pos\":358526,\"text\":\"Functions you send into other functions are called /i/callback functions./\"},{\"pos\":365340,\"text\":\"Filter will loop through each item in the array and for each item, it will apply the callback function. \"},{\"pos\":382024,\"text\":\"It will expect the filter function to return either true or false to decide whether or not the new item should be in the array. \"},{\"pos\":392325,\"text\":\"Once done, it will return the filtered array. \"},{\"pos\":402995,\"text\":\"/n//n/Notice that the sample using filter is a lot less code than for loop. \"},{\"pos\":421995,\"text\":\"Its because we are actually writing less code, less logic. \"},{\"pos\":456745,\"text\":\"/n/Creating a new array is handled inside the filter function. \"},{\"pos\":474245,\"text\":\"The callback function and the filter function lock into each other - they are /i/composable./\"},{\"pos\":491227,\"text\":\"/n//n/Lets break out the callback into a variable. \"},{\"pos\":507229,\"text\":\"By defining the isDog function. \"},{\"pos\":523729,\"text\":\"We can use it for other things. \"},{\"pos\":532729,\"text\":\"We could pass it to reject (not in JS natively, but is there in other libraries like underscore). \"},{\"pos\":631710,\"text\":\"/n//n/Next time I will talk about map and reduce. \"}]","css":".t{font-weight:bold;}.t:before{content:\"\\A\";white-space: pre;}.t:after{content:\"\\A\";white-space: pre;}","videoid":"BMUiFMZr7vk","title":"Higher-order functions - Part 1 of Functional Programming in JavaScript","duration":648.761,"category":"Functional Programming in JavaScript"}