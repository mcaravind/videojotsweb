{"text":"[{\"pos\":3528,\"text\":\"In this video we are going to learn about recursion. \"},{\"pos\":8015,\"text\":\"We will learn what recursion is, how to do it and why it is useful. \"},{\"pos\":25183,\"text\":\"Recursion is when a function calls itself until it doesn't.&nbsp;\"},{\"pos\":86249,\"text\":\"/n/<span class=\\\"t\\\">Start of demo</span>\"},{\"pos\":91497,\"text\":\"We will implement a countdown function. \"},{\"pos\":112748,\"text\":\"Start by declaring the functon. \"},{\"pos\":178891,\"text\":\"/n/let is just the new var. \"},{\"pos\":186142,\"text\":\"Arrow functions is a shorter function syntax. \"},{\"pos\":244554,\"text\":\"/n/Recursion function example. It worked, but there was no stop condition. \"},{\"pos\":298991,\"text\":\"Lets add the stop condition. \"},{\"pos\":367104,\"text\":\"/n/We have learnt what recursion is and a simple example of how to do it. \"},{\"pos\":375120,\"text\":\"Why should we use it? \"},{\"pos\":388356,\"text\":\"/n/<span class=\\\"t\\\">There are things recursion can do that loops cannot</span>\"},{\"pos\":423323,\"text\":\"Example: hierarchical records. \"},{\"pos\":530076,\"text\":\"/n/A good trick in programming - take some time to think about the goal. \"},{\"pos\":760793,\"text\":\"/n/<span class=\\\"t\\\">Walk through of the code example</span>\"},{\"pos\":859534,\"text\":\"To a certain degree you can do this with loops. \"},{\"pos\":882535,\"text\":\"Only works for limited amount of nesting. \"}]","css":".t{font-weight:bold;}.t:before{content:\"\\A\";white-space: pre;}.t:after{content:\"\\A\";white-space: pre;}","videoid":"k7-N8R0-KY4","title":"Recursion - Part 7 of Functional Programming in JavaScript","duration":943.381,"category":"Functional Programming in JavaScript","pageName":"part7_recursion.html"}