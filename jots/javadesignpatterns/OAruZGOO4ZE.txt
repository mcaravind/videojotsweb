{"text":"[{\"pos\":2145,\"text\":\"This is John from caveofprogramming.com. \"},{\"pos\":5663,\"text\":\"In this tutorial we are going to look at the facade pattern. \"},{\"pos\":10089,\"text\":\"A facade pattern just means using a class, typically that provides you with a /i/simpler interface/ to some other classes. \"},{\"pos\":18280,\"text\":\"In other words, a facade. \"},{\"pos\":20921,\"text\":\"/n//n/In Eclipse, I have a class called App with a main method. \"},{\"pos\":36952,\"text\":\"The idea here is I am simulating a little game. \"},{\"pos\":45262,\"text\":\"If you write a game what you typically do is you will have part of program called the game loop, which is just a massive loop which will go on forever. \"},{\"pos\":63772,\"text\":\"/n//n/I will just have an infinite loop for simplicity here and then use it within the game where you get some sort of user input. \"},{\"pos\":74721,\"text\":\"Then you update game object, in other words, player and bad guys and so on. \"},{\"pos\":87012,\"text\":\"And then finally you draw the game object to the screen. This is a typical pattern in a game. \"},{\"pos\":96179,\"text\":\"/n//n/And I have created some dummy objects we might use. \"},{\"pos\":99223,\"text\":\"Here I have got an InputSystem class which is a dummy implementation. \"},{\"pos\":106726,\"text\":\"The idea is that this class will get the input from the user. \"},{\"pos\":110087,\"text\":\"They we have got a GameObjects class which contains different objects in the game - bad guys, good guys etc. \"},{\"pos\":129751,\"text\":\"And we have a GameConsole object whose responsibility is to take the list of objects and draw them to the screen so the user can see them. \"},{\"pos\":139620,\"text\":\"To actually run our game, we need some objects - let us instantiate those. \"},{\"pos\":147179,\"text\":\"We have InputSystem object. \"},{\"pos\":159680,\"text\":\"We will need a GameObject. \"},{\"pos\":167680,\"text\":\"We will need a class to represent the screen - GameConsole class. \"},{\"pos\":187429,\"text\":\"/n//n/Now if we were not using facade pattern, we would say input.getInput() to get input from user. \"},{\"pos\":206758,\"text\":\"Then we use this information to update the game object. \"},{\"pos\":223182,\"text\":\"And finally, we will draw the game object using screen.draw. \"},{\"pos\":232437,\"text\":\"/n//n/This is not using facade, and the idea behind the facade pattern is that we can simplify these with another class. \"},{\"pos\":232508,\"text\":\"This is not using the facade pattern. \"},{\"pos\":242013,\"text\":\"Let us create a new class called Game. \"},{\"pos\":250756,\"text\":\"This is going to be our facade class. \"},{\"pos\":262755,\"text\":\"Instead of having the GameObjects in main, let us have them as instance variables in the Game class. \"},{\"pos\":282218,\"text\":\"And we can just have one single method here - call it update(). \"},{\"pos\":292598,\"text\":\"Now we can cut all the code from main into the update method. \"},{\"pos\":304848,\"text\":\"Now in our main method, we can simplify the game loop a lot.\"},{\"pos\":316134,\"text\":\"We will have a Game object. \"},{\"pos\":320871,\"text\":\"And call game.update(). \"},{\"pos\":320993,\"text\":\"/n//n/This is just one possible simple example of a facade type pattern and there is no really fixed definition of what facade means. \"},{\"pos\":331267,\"text\":\"It is a general idea of simplifying code into a bunch of different objects like we have here. \"},{\"pos\":343611,\"text\":\"And creating a simplified API to those objects. \"},{\"pos\":352786,\"text\":\"We have hidden the complexity of the different objects.\"},{\"pos\":355610,\"text\":\"We have simplified it to this game object and this Game class is our facade. \"},{\"pos\":371456,\"text\":\"/n//n/Thats the facade pattern - very simple. \"}]","css":"","videoid":"OAruZGOO4ZE","title":"Facades: Java Design Patterns Part 18","duration":411.062856,"category":"Java Design Patterns","pageName":"facades.html"}