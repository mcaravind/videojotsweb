{"text":"[{\"pos\":5639,\"text\":\"I am Scott. \"},{\"pos\":7259,\"text\":\"I am a software engineer in NYC at Kontor which is like a place for office design. \"},{\"pos\":17160,\"text\":\"I am here to talk to you about one of my side projects - a visual search and classification engine for Gilt. \"},{\"pos\":29772,\"text\":\"Gilt is a large ecommerce site with products like sunglasses, dresses, shoes. \"},{\"pos\":44732,\"text\":\"This talk is geared towards software engineers. \"},{\"pos\":72481,\"text\":\"/n/There has been a lot of engineering effort put into TensorFlow, how to productionize it. \"},{\"pos\":82166,\"text\":\"I will touch on the theory but focus on the engineering around TensorFlow. \"},{\"pos\":86378,\"text\":\"/n/<span class=\\\"t\\\">Classification</span>\"},{\"pos\":94628,\"text\":\"The basic problem - I take a selfie - and need labels for the shirt, descending by what is most likely in the image. \"},{\"pos\":128133,\"text\":\"I want the labels to be from the Gilt taxonomy. \"},{\"pos\":131076,\"text\":\"/n/<span class=\\\"t\\\">Visual search</span>\"},{\"pos\":137078,\"text\":\"Given the image, I want to search the Gilt catalog for other short sleeved sports shirts. \"},{\"pos\":150464,\"text\":\"/n/<span class=\\\"t\\\">How to distill the essence of an image?</span>\"},{\"pos\":152570,\"text\":\"We want to distill the essence - a machine readable vector of numbers that represent this image. \"},{\"pos\":168619,\"text\":\"The reason is there are a lot of well known algorithms which can run on this, like classification and they all require some kind of input format which is a vector of numbers. \"},{\"pos\":189439,\"text\":\"/n/I can run two kinds of algorithms - classification and nearest neighbor search. \"},{\"pos\":198431,\"text\":\"I want to spend time on how to get the essence of the image - construct the features of the image. \"},{\"pos\":201906,\"text\":\"Once we can do that, all these other algorithms depend on having good features for the image. \"},{\"pos\":207855,\"text\":\"/n/<span class=\\\"t\\\">Image features</span>\"},{\"pos\":210325,\"text\":\"I could download OpenCV, a library for processing images and start handcrafting features. \"},{\"pos\":217558,\"text\":\"I could do some edge detection, pick out boundaries around shapes, put those into a vector to get rid of a lot of noise. \"},{\"pos\":232199,\"text\":\"I could make a color histogram. \"},{\"pos\":239199,\"text\":\"The problem with all this is that there is a lot of process involved with coming up with all these hand-crafted features. \"},{\"pos\":243840,\"text\":\"A random forest could tell me which features are more predictive than others for example but a lot of effort and engineering has to go into just selecting the features. \"},{\"pos\":261634,\"text\":\"/n/<span class=\\\"t\\\">Convolutional neural nets</span>\"},{\"pos\":264899,\"text\":\"Provide a black box to construct these features that I normally would have had to hand-craft. \"},{\"pos\":279895,\"text\":\"If I want to use a convolutional neural network, to train it, typically lots of time and effort and GPU farm to do in a reasonable amount of time. \"},{\"pos\":304506,\"text\":\"Luckily, the TensorFlow team has released a pre-trained model, the Inception-v3, which has already been trained on a dataset called ImageNet. \"},{\"pos\":313817,\"text\":\"It does a really good job of classifying images. \"},{\"pos\":317603,\"text\":\"/n/<span class=\\\"t\\\">ImageNet</span>\"},{\"pos\":322352,\"text\":\"Broad set of images across many categories. \"},{\"pos\":350352,\"text\":\"/n/<span class=\\\"t\\\">Why use a pre-trained model?</span>\"},{\"pos\":352742,\"text\":\"Its is faster, it is cheap and it generalizes (most important)\"},{\"pos\":393740,\"text\":\"/n/<span class=\\\"t\\\">Transfer learning</span>\"},{\"pos\":396350,\"text\":\"We have the inception v3 model. \"},{\"pos\":396351,\"text\":\"We know the model has been trained on ImageNet, it hasn't seen any Gilt images before. \"},{\"pos\":411724,\"text\":\"I want to know specific taxonomy for the data I am interested in. \"},{\"pos\":420876,\"text\":\"We will apply this technique called transfer learning. \"},{\"pos\":430146,\"text\":\"/n/<span class=\\\"t\\\">Structure of the network</span>\"},{\"pos\":441646,\"text\":\"Let us look at a convolutional neural network. \"},{\"pos\":445665,\"text\":\"There are lots of layers to this network. \"},{\"pos\":451304,\"text\":\"Images will come in from the left side and out on the right side will come a label and a probability associated with that label. \"},{\"pos\":456548,\"text\":\"If you inspect the earlier layers in the network, you will notice some interesting things. \"},{\"pos\":464079,\"text\":\"It is teaching itself an edge detector. \"},{\"pos\":479288,\"text\":\"If you traverse a little farther, it is picking up more and more specific things in the image. \"},{\"pos\":487325,\"text\":\"You might see a shape detector as you go further down this network. \"},{\"pos\":491741,\"text\":\"At the very end, is the essence of our image. \"},{\"pos\":511998,\"text\":\"If we chop the last couple of layers off, what we are left with is a generalized image recognition blackbox which is exactly what we want to use. \"},{\"pos\":525106,\"text\":\"/n/<span class=\\\"t\\\">t-SNE plot</span>\"},{\"pos\":528767,\"text\":\"How do we know if we will actually get something useful if we chop these final layers off? \"},{\"pos\":535264,\"text\":\"There is a cool algorithm called t-SNE which you can feed a bunch of images through your neural net, get all these features off the second last layer of your neural network and you can plot them. \"},{\"pos\":552925,\"text\":\"You can use t-SNE to reduce the dimension of these feature vectors into 2D space - once you have it in 2D space it is easy to plot them. \"},{\"pos\":569624,\"text\":\"In this case, I ran on CIFAR 10 data set and this is what came out. \"},{\"pos\":579671,\"text\":\"The yellow cluster at the top represents an image of a car and it clusters nicely. \"},{\"pos\":591640,\"text\":\"The orange cluster is trucks. \"},{\"pos\":607896,\"text\":\"Reds are cats and grays are dogs. \"},{\"pos\":615702,\"text\":\"It has some trouble sifting out between cat and dog but does a pretty good job. \"},{\"pos\":631126,\"text\":\"So t-SNE gives you a great way to get a sense of the features you are extracting from your images. \"},{\"pos\":635478,\"text\":\"/n/<span class=\\\"t\\\">Code demo</span>\"},{\"pos\":658977,\"text\":\"-load the inception-v3 file\"},{\"pos\":669779,\"text\":\"/n/-get a reference to the pool 3 layer\"},{\"pos\":683488,\"text\":\"/n/-extract features for your own image\"},{\"pos\":733976,\"text\":\"/n/<span class=\\\"t\\\">Performance</span>\"},{\"pos\":748976,\"text\":\"On average, it takes a second per image. \"},{\"pos\":760726,\"text\":\"It will take about 12 hours for this case. \"},{\"pos\":783477,\"text\":\"It is an easily parallelizable problem though. \"},{\"pos\":804232,\"text\":\"I would recommend - if you extract pool_3 features then save them somewhere. \"},{\"pos\":809316,\"text\":\"I save them as numpy array in a postgres database. \"},{\"pos\":817112,\"text\":\"/n/<span class=\\\"t\\\">Applying pool_3 features</span>\"},{\"pos\":846119,\"text\":\"We can do the nearest neighbor search - I ran a brute force search. \"},{\"pos\":868868,\"text\":\"For a large dataset, the approximate nearest neighbor search could be a good choice. \"},{\"pos\":894127,\"text\":\"/n/Finally I want to train a classifier. \"},{\"pos\":907369,\"text\":\"I used Nearest Neighbor classifier, but you could just as well use Softmax classifier. \"},{\"pos\":916662,\"text\":\"/n/<span class=\\\"t\\\">You don't need to use TensorFlow for everything</span>\"},{\"pos\":934911,\"text\":\"Many of the stuff mentioned in the TensorFlow tutorials are not essential, and you can customize it to suit your problem. \"},{\"pos\":980520,\"text\":\"/n/<span class=\\\"t\\\">Output demo</span>\"},{\"pos\":1148421,\"text\":\"<span class=\\\"t\\\">Q&amp;A</span>\"}]","css":".t{font-weight:bold;}.t:before{content:\"\\A\";white-space: pre;}.t:after{content:\"\\A\";white-space: pre;}","videoid":"VpDonQAKtE4","title":"Training your own image classifier with TensorFlow by Scott Thompson","duration":1406.861,"category":"TensorFlow","pageName":""}