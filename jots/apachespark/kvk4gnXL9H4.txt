{"text":"[{\"pos\":8122,\"text\":\"I would like to talk about what's in the 2.0 preview. \"},{\"pos\":15655,\"text\":\"I want you to walk away with knowledge of the highlights and links and references to take to learn more about the specifics. \"},{\"pos\":26589,\"text\":\"<span class=\\\"t\\\">Who am I?</span>\"},{\"pos\":30199,\"text\":\"Apache Spark committer and PMC member\"},{\"pos\":37031,\"text\":\"/n/Software Engineer @ Databricks\"},{\"pos\":41889,\"text\":\"<span class=\\\"t\\\">MLLib trajectory</span>\"},{\"pos\":49337,\"text\":\"Unique commits per release over the years\"},{\"pos\":77674,\"text\":\"/n/DataFrame based API for MLLib - has been slowly growing.\"},{\"pos\":107710,\"text\":\"/n/With 2.0, primary API for MLLib\"},{\"pos\":112348,\"text\":\"<span class=\\\"t\\\">DataFrame based API for MLLib</span>\"},{\"pos\":119129,\"text\":\"One using DataFrames and not RDDs. \"},{\"pos\":128205,\"text\":\"Pipelines API. \"},{\"pos\":134798,\"text\":\"/n/In 2.0 the DataFrame based API will become the primary API for MLLib\"},{\"pos\":142381,\"text\":\"/n//n/The RDD based API will enter maintenance mode. \"},{\"pos\":153905,\"text\":\"/n/Still maintained with bug fixes, but no new features\"},{\"pos\":157836,\"text\":\"<span class=\\\"t\\\">Goals for MLLib in 2.0</span>\"},{\"pos\":162115,\"text\":\"Major initiatives\"},{\"pos\":174308,\"text\":\"/n/-generalized linear models\"},{\"pos\":178692,\"text\":\"/n/-Python and R API expansion\"},{\"pos\":178693,\"text\":\"/n/-ML persistence: saving and loading models and pipelines\"},{\"pos\":184252,\"text\":\"/n//n/Also in 2.0\"},{\"pos\":188511,\"text\":\"/n/-Sketching algorithms\"},{\"pos\":204480,\"text\":\"/n//n/First two of major initiatives are what I call exploratory analysis. \"},{\"pos\":218947,\"text\":\"/n//n/The second part is bridging that gap to production and is a big step forward. \"},{\"pos\":225410,\"text\":\"<span class=\\\"t\\\">MLLib for exploratory analysis</span>\"},{\"pos\":229424,\"text\":\"GLMs in Python and R\"},{\"pos\":230344,\"text\":\"<span class=\\\"t\\\">Generalized Linear Models (GLMs)</span>\"},{\"pos\":233131,\"text\":\"Arguably the most important class of models for ML\"},{\"pos\":244282,\"text\":\"/n/-Logistic regression\"},{\"pos\":248834,\"text\":\"/n/-Linear regression\"},{\"pos\":278290,\"text\":\"/n/-Many other types of models\"},{\"pos\":283326,\"text\":\"/n/-Model summary statistics\"},{\"pos\":292305,\"text\":\"<span class=\\\"t\\\">GLMs in 2.0</span>\"},{\"pos\":300515,\"text\":\"GLMs in 2.0 support a number of standard model families and a number of supported link functions. \"},{\"pos\":307727,\"text\":\"/n//n/Fixes for some corner cases - e.g. handle invalid labels gracefully\"},{\"pos\":319737,\"text\":\"/n//n/Two sorts of APIs to look at:\"},{\"pos\":330333,\"text\":\"/n/GeneralizedLinearRegression - max 4096 features - solved using iteratively reweighted least squares (IRLS)\"},{\"pos\":349540,\"text\":\"/n/LinearRegression and LogisticRegression - millions of features - solved using L-BGFS/OWL-QN\"},{\"pos\":368324,\"text\":\"<span class=\\\"t\\\">Python and R APIs for MLLib</span>\"},{\"pos\":369564,\"text\":\"Goal:Expand ML APIs for critical languages for data science\"},{\"pos\":380071,\"text\":\"/n/Python\"},{\"pos\":383933,\"text\":\"/n/-Clustering algorithms\"},{\"pos\":389646,\"text\":\"/n/-meta algorithms\"},{\"pos\":394270,\"text\":\"/n/-GeneralizedLinearRegression\"},{\"pos\":403797,\"text\":\"/n/-Feature transformers\"},{\"pos\":410895,\"text\":\"/n/-model inspection\"},{\"pos\":415110,\"text\":\"/n//n/R\"},{\"pos\":417540,\"text\":\"/n/-Regression and classification\"},{\"pos\":426396,\"text\":\"/n/-Clustering\"},{\"pos\":447478,\"text\":\"<span class=\\\"t\\\">Demo</span>\"},{\"pos\":463331,\"text\":\"Create a cluster (Databricks Community Edition)\"},{\"pos\":477282,\"text\":\"/n//n/I will do some imports. I am working from Python. \"},{\"pos\":492111,\"text\":\"/n//n/I would like to put together a little pipeline. \"},{\"pos\":495841,\"text\":\"In that pipeline I will use GeneralizedLinearRegression and show you how to inspect those models. \"},{\"pos\":508447,\"text\":\"/n//n/After the imports, load data. \"},{\"pos\":514525,\"text\":\"My training data will be read from parquet. \"},{\"pos\":526257,\"text\":\"It is a small set of Amazon reviews and I will cache it. \"},{\"pos\":540710,\"text\":\"/n//n/Let us take a look to see what we have. \"},{\"pos\":557323,\"text\":\"/n//n/Goal: take that review text and predict the rating. \"},{\"pos\":561069,\"text\":\"You might phrase it as sentiment analysis. \"},{\"pos\":564721,\"text\":\"/n//n/For featurization, we need to get this text into numerical values. \"},{\"pos\":575576,\"text\":\"We will use MLLib's tokenizer. \"},{\"pos\":587305,\"text\":\"The input will be the review, and I will call the output 'words'. \"},{\"pos\":601766,\"text\":\"We will convert words to TF vectors. \"},{\"pos\":615409,\"text\":\"Lets say the number of features is 1000. \"},{\"pos\":623707,\"text\":\"/n//n/For our model, I would like to use GeneralizedLinearRegression where our label column is going to be rating. \"},{\"pos\":637361,\"text\":\"It knows by default to use features column called 'features'. \"},{\"pos\":641162,\"text\":\"We can specify what GeneralizedLinearModel we want. \"},{\"pos\":644898,\"text\":\"I will use the standard one - the family will be 'gaussian', the link set explicitly as 'identity', and you might specify other parameters. \"},{\"pos\":670654,\"text\":\"I am not going to focus on tuning in this demo. \"},{\"pos\":672658,\"text\":\"/n//n/Finally we can take this pipeline and string everything together. \"},{\"pos\":683850,\"text\":\"/n//n/All you have to do is 'fit' on that training set, it will do the featurization, fit the model and so on. \"},{\"pos\":698474,\"text\":\"/n//n/Now we can say make predictions. \"},{\"pos\":704832,\"text\":\"We will do model.transform on that training data. It will return a new dataframe of predictions and we can display it. \"},{\"pos\":713889,\"text\":\"/n//n/This will add a new column, ratings. \"},{\"pos\":725682,\"text\":\"Let us select the true rating, the prediction and review. \"},{\"pos\":741298,\"text\":\"/n//n/If you have seen pipeline demos, you have seen this before.\"},{\"pos\":745248,\"text\":\"What is new in 2.0, is the ability to go and inspect the model a little bit further. \"},{\"pos\":749822,\"text\":\"/n//n/Our model has a field called stages, and the last one is GeneralizedLinearRegression. \"},{\"pos\":767969,\"text\":\"We will take the model and it has a field called summary. \"},{\"pos\":776308,\"text\":\"Everything from coefficient standard errors, and number of iterations etc. \"},{\"pos\":787827,\"text\":\"A lot of statistics which are really useful if you are coming as a data scientist. \"},{\"pos\":796581,\"text\":\"/n//n/We might want to inspect the model for coefficients and then ask - are these actually meaningful coefficient estimates or just noise?\"},{\"pos\":806860,\"text\":\"/n//n/Take our summary and compare the coefficients with their standard errors and get a sense of which features have a very obvious signal. \"},{\"pos\":839453,\"text\":\"<span class=\\\"t\\\">MLLib in production</span>\"},{\"pos\":847328,\"text\":\"Persistence and customizing pipelines\"},{\"pos\":854910,\"text\":\"<span class=\\\"t\\\">Why ML persistence?</span>\"},{\"pos\":869005,\"text\":\"Data Science teams and Software Engineering teams. \"},{\"pos\":882731,\"text\":\"It gets complex when you have a pipeline. \"},{\"pos\":891787,\"text\":\"It can get difficult to bridge this gap frequently and smoothly. \"},{\"pos\":909618,\"text\":\"/n//n/The idea of ML persistence is to smooth this where data scientists can create this pipeline, persist it by calling model.save to an s3 bucket, and software engg side can load that into Scala or Java in their production deployment. \"},{\"pos\":941211,\"text\":\"<span class=\\\"t\\\">ML persistence status</span>\"},{\"pos\":953632,\"text\":\"A single model like Generalized Linear Regression is a fitted model. \"},{\"pos\":999029,\"text\":\"/n//n/You might have a big pipeline - text preprocessing, feature generation, generalized linear regression. \"},{\"pos\":1002268,\"text\":\"With model tuning wrapped around it. \"},{\"pos\":1020737,\"text\":\"/n//n/Near complete coverage in all Spark language APIs\"},{\"pos\":1033344,\"text\":\"/n/-Scala and Java complete\"},{\"pos\":1035424,\"text\":\"/n/-Python: complete except for 2 algorithms\"},{\"pos\":1035425,\"text\":\"/n/-R: Complete for existing APIs\"},{\"pos\":1067675,\"text\":\"/n//n/Single underlying implementation of models\"},{\"pos\":1077290,\"text\":\"/n//n/Exchangeable data format\"},{\"pos\":1082369,\"text\":\"<span class=\\\"t\\\">Customizing ML pipelines</span>\"},{\"pos\":1088573,\"text\":\"MLLib 2.0 will include\"},{\"pos\":1095181,\"text\":\"/n/-29 feature transformers\"},{\"pos\":1098403,\"text\":\"/n/-21 models\"},{\"pos\":1098404,\"text\":\"/n/-model tuning and evaluation\"},{\"pos\":1098405,\"text\":\"/n//n/But some applications require customized transformers and models\"},{\"pos\":1102256,\"text\":\"<span class=\\\"t\\\">Options for customization</span>\"},{\"pos\":1104398,\"text\":\"Extend abstractions\"},{\"pos\":1105680,\"text\":\"/n/-transformer\"},{\"pos\":1111217,\"text\":\"/n/-estimator and model\"},{\"pos\":1116664,\"text\":\"/n/-evaluator\"},{\"pos\":1129003,\"text\":\"/n//n/There are a number of existing use cases - natural language processing, featurization libraries, many others. \"},{\"pos\":1146826,\"text\":\"/n//n/I will mention one very popular use case - the UnaryTransformer which takes an input column and produces an output column. \"},{\"pos\":1160522,\"text\":\"/n//n/Simple API which provides:\"},{\"pos\":1166788,\"text\":\"/n/-DataFrame based API\"},{\"pos\":1168887,\"text\":\"/n/-built in parameters getters and setters\"},{\"pos\":1168888,\"text\":\"/n/-distributed row wise transformation\"},{\"pos\":1185974,\"text\":\"<span class=\\\"t\\\">Persistence for customized algorithms</span>\"},{\"pos\":1190193,\"text\":\"2 traits provide persistence for simple transformers: DefaultParamsWritable and DefaultParamsReadable\"},{\"pos\":1195855,\"text\":\"/n//n/Simply mix in these traits to provide persistence\"},{\"pos\":1200716,\"text\":\"/n/-saves and loads algorithm parameters\"},{\"pos\":1200717,\"text\":\"/n/-does not save member data\"},{\"pos\":1234935,\"text\":\"<span class=\\\"t\\\">Demo</span>\"},{\"pos\":1239316,\"text\":\"We have our workflow, our pipeline and model. \"},{\"pos\":1241820,\"text\":\"Now I would like to take our model and write with overwrite and save it in JSON parquet format. \"},{\"pos\":1266199,\"text\":\"/n//n/Then I can send this over to the engineer. \"},{\"pos\":1278945,\"text\":\"/n//n/Here I am going to do it as a very simple demo. \"},{\"pos\":1287810,\"text\":\"It could deployed with Spark streaming or whatever workflow you have. \"},{\"pos\":1293025,\"text\":\"/n//n/I will import PipelineModel. \"},{\"pos\":1301557,\"text\":\"I will take the PipelineModel class and load the same file I just saved from Pipeline. \"},{\"pos\":1305198,\"text\":\"Now whats loading back is this pipeline model which includes featurization. \"},{\"pos\":1313201,\"text\":\"So I can immediately take data in the same format and now I can make predictions. \"},{\"pos\":1350856,\"text\":\"/n//n/We can get the same set of transformations happening calling model.transform on that test data. \"},{\"pos\":1356256,\"text\":\"Now we can display it. \"},{\"pos\":1368488,\"text\":\"/n//n/And we get the same thing in Scala. \"},{\"pos\":1376373,\"text\":\"<span class=\\\"t\\\">Recap</span>\"},{\"pos\":1380273,\"text\":\"Exploratory analysis\"},{\"pos\":1384916,\"text\":\"/n/-generalized linear regression\"},{\"pos\":1385021,\"text\":\"/n/Production\"},{\"pos\":1385397,\"text\":\"/n/-Python and R APIs\"},{\"pos\":1388633,\"text\":\"/n/-ML persistence\"},{\"pos\":1389092,\"text\":\"/n/-customizing pipelines\"},{\"pos\":1392951,\"text\":\"/n//n/I would like to thank the community for the contributions and support. \"},{\"pos\":1404109,\"text\":\"<span class=\\\"t\\\">What's next?</span>\"},{\"pos\":1408163,\"text\":\"Prioritized items on the 2.1 roadmap\"},{\"pos\":1416940,\"text\":\"/n/-critical feature completeness for the DataFrames based API\"},{\"pos\":1423501,\"text\":\"/n/ - multiclass logistic regression\"},{\"pos\":1428472,\"text\":\"/n/ - statistics\"},{\"pos\":1429091,\"text\":\"/n/-Python API parity and R API expansion\"},{\"pos\":1436328,\"text\":\"/n/-Scaling and speed tuning for key algorithms: trees and ensembles\"},{\"pos\":1441135,\"text\":\"/n//n/GraphFrames\"},{\"pos\":1444487,\"text\":\"/n/-Release for Spark 2.0\"},{\"pos\":1448740,\"text\":\"/n/-Speed improvements - join elimination, connected components\"},{\"pos\":1471354,\"text\":\"<span class=\\\"t\\\">Get Started</span>\"},{\"pos\":1478057,\"text\":\"Roadmap JIRA\"},{\"pos\":1482052,\"text\":\"/n/Download notebook for this talk\"},{\"pos\":1482053,\"text\":\"/n/ML persistence blog post\"},{\"pos\":1485025,\"text\":\"/n//n/Check out preview release of 2.0. Thank you. \"},{\"pos\":1502021,\"text\":\"<span class=\\\"t\\\">Questions</span>\"},{\"pos\":1518205,\"text\":\"<span class=\\\"t\\\">How will MLLib fit together with structured streaming deployment in production?</span>\"},{\"pos\":1531660,\"text\":\"There is currently no integration. But you could fit a model and integrate that by hand. \"},{\"pos\":1539279,\"text\":\"What we would really like to do is provide full integration both online fitting and online prediction. \"},{\"pos\":1548673,\"text\":\"Its something we are beginning to prototype with but you know it will take time to make sure we get the API right. \"},{\"pos\":1564410,\"text\":\"<span class=\\\"t\\\">From the software side of things. If I take 2 or 3 dozen of these models, how do I prevent rerunning all the featurization of that model if I know that I got the same inputs?</span>\"},{\"pos\":1600750,\"text\":\"It depends on how you use the pipeline. \"},{\"pos\":1623779,\"text\":\"Cases where things could be optimized more - you want to make predictions on the same training data where if you fit the pipeline it will do the featurization, call transform on that same training data its gonna do that featurization again. \"},{\"pos\":1646118,\"text\":\"And the only way to prevent that is to break your pipeline into parts and do some manual caching. \"},{\"pos\":1668137,\"text\":\"<span class=\\\"t\\\">Is there any plan to support DataSets API as well?</span>\"},{\"pos\":1675719,\"text\":\"We are keeping the type agnostic row format because people add columns, remove, hard to define a type for each. \"},{\"pos\":1701604,\"text\":\"It would be good to know what particular use cases people have other than making predictions with a single model. \"},{\"pos\":1715631,\"text\":\"The best use of the integrations is if you are writing your own implementations of a transformer or a estimator, then you can certainly make use of the DataSet API in there. \"},{\"pos\":1736217,\"text\":\"<span class=\\\"t\\\">Many companies have prediction as a service. Everything you presented is Spark only. Do you have any plans in the future to extract it out so we can use it as a JAR in the web service?</span>\"},{\"pos\":1779579,\"text\":\"It is being brought up more and more. \"},{\"pos\":1782484,\"text\":\"Something like a linear model can be quite simple. \"},{\"pos\":1790590,\"text\":\"But I think there are a number of things which need to be done to make it really seamless. \"},{\"pos\":1798322,\"text\":\"/n//n/First there are efforts to be able to deploy essentially the same code but subsets of it. \"},{\"pos\":1806725,\"text\":\"Which run in Spark but outside of Spark. \"},{\"pos\":1808631,\"text\":\"There was an initial movement to do that with Linear Algebra library. \"},{\"pos\":1821273,\"text\":\"Thats the beginning. \"},{\"pos\":1825726,\"text\":\"But in the meantime, I think that the best options tend to be - if you have some featurization, I think one critical thing we did do in 2.0 branch is switch to using murmurhash3 everywhere. \"},{\"pos\":1847799,\"text\":\"Which is like standard library so you can get same featurization results outside of Spark. \"},{\"pos\":1856436,\"text\":\"But we need to offer it. \"},{\"pos\":1869607,\"text\":\"/n//n/Within a year, I don't have an exact date, I hope sooner. \"}]","css":".t{font-weight:bold;}.t:before{content:\"\\A\\A\";white-space: pre;}.t:after{content:\"\\A\";white-space: pre;}","videoid":"kvk4gnXL9H4","title":"Apache Spark MLlib 2 0 Preview: Data Science and Production","duration":1882.301,"category":"Apache Spark","pageName":""}